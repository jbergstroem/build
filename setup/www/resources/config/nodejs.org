log_format nodejs    '$remote_addr - $remote_user [$time_local] '
                     '"$request" $status $body_bytes_sent '
                     '"$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

server {
    listen *:80;
    listen [::]:80 ipv6only=on;
    server_name www.nodejs.org;

    return 301 https://nodejs.org$request_uri;
}

server {
    listen *:80 default_server;
    listen [::]:80 default_server ipv6only=on;
    server_name nodejs.org;

    access_log /var/log/nginx/nodejs.org-access.log nodejs;
    error_log /var/log/nginx/nodejs.org-error.log;

    keepalive_timeout 60;
    server_tokens off;

    gzip on;
    gzip_static on;
    gzip_disable "MSIE [1-6]\.";
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    # let the blog.nodejs.org redirector handle this
    location ~ /blog(.*) {
      rewrite ^/blog(.*) http://blog.nodejs.org/$1 permanent;
    }

    root /home/www/nodejs;
    default_type text/plain;
    index index.html;

    location / {
        location ~ \.json$ {
            add_header access-control-allow-origin *;
        }
    }

    location /dist {
        alias /home/dist/nodejs/release/;
        autoindex on;
        default_type text/plain;

        location ~ \.json$ {
            add_header access-control-allow-origin *;
        }
    }
}

server {
    listen *:80;
    server_name blog.nodejs.org;

    include includes/nodejs-blog-rewritemap.conf;
    rewrite ^ $new permanent;
}

server {
    listen *:80;
    server_name doc.nodejs.org docs.nodejs.org;

    return 301 https://nodejs.org/en/docs/$request_uri;
}

server {
    listen *:80;
    server_name api.nodejs.org;

    return 301 https://nodejs.org/api/$request_uri;
}

server {
    listen *:80;
    server_name dist.nodejs.org;

    return 301 https://nodejs.org/dist/$request_uri;
}

server {
    listen *:80;
    server_name interactive.nodejs.org;

    return 301 http://events.linuxfoundation.org/events/node-interactive;
}

server {
    listen *:443 ssl spdy;
    listen [::]:443 ipv6only=on ssl spdy;
    server_name new.nodejs.org www.nodejs.org blog.nodejs.org;

    include includes/node-ssl.conf;

    return 301 https://nodejs.org$request_uri;
}

server {
    listen *:443 default_server ssl spdy;
    listen [::]:443 default_server ipv6only=on ssl spdy;

    server_name nodejs.org;

    include includes/node-ssl.conf;

    keepalive_timeout 60;
    server_tokens off;

    resolver 8.8.4.4 8.8.8.8 valid=300s;
    resolver_timeout 10s;

    #add_header Strict-Transport-Security max-age=63072000;
    #add_header X-Frame-Options DENY;
    #add_header X-Content-Type-Options nosniff;

    access_log /var/log/nginx/nodejs.org-access.log nodejs;
    error_log /var/log/nginx/nodejs.org-error.log;

    gzip on;
    gzip_static on;
    gzip_disable "MSIE [1-6]\.";
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    error_page 404 /en/404.html;

    root /home/www/nodejs;
    default_type text/plain;
    index index.html;

    location / {
        rewrite ^/$ /en/ redirect;

        location ~ \.json$ {
            add_header access-control-allow-origin *;
        }
    }

    location /download {
        alias /home/dist/nodejs;
        autoindex on;
        default_type text/plain;
        add_header X-Robots-Tag noindex;

        location ~ \.json$ {
            add_header access-control-allow-origin *;
        }
    }

    location /dist {
        alias /home/dist/nodejs/release/;
        autoindex on;
        default_type text/plain;

        location ~ \.json$ {
            add_header access-control-allow-origin *;
        }
    }

    location /docs {
        alias /home/dist/nodejs/docs/;
        autoindex on;
        default_type text/html;

        location ~ \.json$ {
            add_header access-control-allow-origin *;
        }
    }

    location /docs/latest/api {
        return 301 /api/$1;

    }

    location /api {
        alias /home/dist/nodejs/docs/latest/api;
        location ~ \.json$ {
            add_header access-control-allow-origin *;
        }
    }

    location /robots.txt {
        alias /home/www/nodejs/static/robots.txt;
        default_type text/plain;
    }

    rewrite ^ $static_rewrite permanent;
}
