---

#
# updates an ssh key on the remote host
#
# the following assumptions are made:
# 1. the keys available to you will be stored in ~/.ssh/
#    and named accordingly:
#
#    `nodejs_build_$machine_type{,.pub}` where $machine_type correlates to
#    machine prefix such as test- infra- lint- or release-.
#
# 2. pubkey needs the email suffixed to be formatted in a similar fashion:
#
#    `$machine_type@build.nodejs.org`
#
# 3. the key needs to be rsa with at least a 4096 key length
#

- hosts: all

  vars_prompt:
    - name: key
      prompt: path to new {,pub}key
      private: false

  tasks:
    - name: verify that the new {,pub}key exists
      local_action: stat path="{{ item }}"
      run_once: true
      with_items:
        - "{{ key }}"
        - "{{ key }}.pub"

    - name: validate new key length
      local_action: raw ssh-keygen -lf {{ key }} | cut -f1 -d " "
      run_once: true
      register: key_length
      failed_when: "key_length.stdout_lines[0]|int < 4096"

    - name: verify new pubkey comment/email format
      local_action: raw grep "{{ type }}@build.nodejs.org" {{ key }}.pub
      run_once: true
      register: verify_email
      failed_when: "verify_email.rc != 0"


    - name: read new pubkey
      run_once: true
      local_action:
        set_fact pubkey="{{ lookup('file', '{{ key }}.pub' ) }}"

    - name: backup authorized_keys
      raw: cp ~/.ssh/authorized_keys ~/.ssh/.authorized_keys.backup

    - name: replace pubkey in authorized_keys
      # why raw here?
      # 1. tilde expansions can't be relied upon, making lineinfile
      #    (with regex) unsuitable.
      # 2. authorized_keys doesn't support modifying the matching process
      #    (we want to match on comment) and forces user to be passed.
      #    we're lazily relying on tilde here to avoid juggling become_user
      #    and ssh user.
      raw: >
        sed -i -e 's|.*{{ type }}\@build.nodejs.org.*|{{ pubkey }}|'
        ~/.ssh/authorized_keys
      register: replaced_key
      failed_when: "replaced_key.rc != 0"

    - name: remove backup
      when: "replaced_key.rc == 0"
      raw: rm ~/.ssh/.authorized_keys.backup

    - name: rollback authorized_keys
      when: "replaced_key.rc != 0"
      raw: mv ~/.ssh/.authorized_keys.backup ~/.ssh/authorized_keys
